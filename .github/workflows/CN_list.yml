name: Update CN List

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-cn-list:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GG_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Create directories
        run: |
          mkdir -p output
          mkdir -p logs
          mkdir -p temp

      - name: Download and process URLs from cn_urls.txt
        run: |
          curl -L -s --retry 3 --retry-delay 5 -o cn_urls.txt https://raw.githubusercontent.com/siren202101/Global_Compilation/refs/heads/main/cn_urls.txt -w "%{http_code}" > http_status.txt || echo "Failed to download cn_urls.txt" >> logs/cn_failed_downloads.log
          if [ -f http_status.txt ]; then
            status=$(cat http_status.txt)
            if [ "$status" != "200" ]; then
              echo "Download cn_urls.txt failed with HTTP status $status" >> logs/cn_failed_downloads.log
            fi
          fi
          if [ -f cn_urls.txt ]; then
            while IFS= read -r url; do
              [[ -z "$url" || "$url" =~ ^# ]] && continue
              filename=$(echo "$url" | sha1sum | awk '{print $1}').txt
              curl -L -s --retry 3 --retry-delay 5 -o "temp/$filename" "$url" -w "%{http_code}" > "temp/$filename.status" || echo "Failed to download $url" >> logs/cn_failed_downloads.log
              if [ -f "temp/$filename.status" ]; then
                status=$(cat "temp/$filename.status")
                if [ "$status" != "200" ]; then
                  echo "Download $url failed with HTTP status $status" >> logs/cn_failed_downloads.log
                fi
              fi
              if [ -f "temp/$filename" ]; then
                grep -vE '^#|^DOMAIN-|^IP-' "temp/$filename" > "temp/$filename.cleaned"
              fi
            done < cn_urls.txt
          else
            echo "cn_urls.txt not found" >> logs/cn_failed_downloads.log
          fi

      - name: Download and process accelerated-domains.china.conf
        run: |
          curl -L -s --retry 3 --retry-delay 5 -o accelerated-domains.china.conf https://fastly.jsdelivr.net/gh/felixonmars/dnsmasq-china-list/accelerated-domains.china.conf -w "%{http_code}" > accelerated_status.txt || echo "Failed to download accelerated-domains.china.conf" >> logs/cn_failed_downloads.log
          if [ -f accelerated_status.txt ]; then
            status=$(cat accelerated_status.txt)
            if [ "$status" != "200" ]; then
              echo "Download accelerated-domains.china.conf failed with HTTP status $status" >> logs/cn_failed_downloads.log
            fi
          fi
          if [ -f accelerated-domains.china.conf ]; then
            sed '/server=\//d; /\/114.114.114.114/d' accelerated-domains.china.conf > temp/accelerated_domains_cleaned.txt
          else
            echo "accelerated-domains.china.conf not found" >> logs/cn_failed_downloads.log
          fi

      - name: Merge and deduplicate files
        run: |
          cat temp/*.cleaned 2>/dev/null | sort -u > output/cn_list.conf
          touch output/cn_list.conf
          touch logs/cn_failed_downloads.log

      - name: Commit and push changes
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add output/cn_list.conf logs/cn_failed_downloads.log
          git commit -m "Update cn_list.conf and cn_failed_downloads.log" || exit 0
          git push https://x:${{ secrets.GG_TOKEN }}@github.com/siren202101/Global_Compilation.git main
